<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >
<!--
    
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements. See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version
    2.0 (the "License"); you may not use this file except in compliance
    with the License. You may obtain a copy of the License at
    
    http://www.apache.org/licenses/LICENSE-2.0 Unless required by
    applicable law or agreed to in writing, software distributed under the
    License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
    CONDITIONS OF ANY KIND, either express or implied. See the License for
    the specific language governing permissions and limitations under the
    License.
-->
<suite name="JSR-346-TCK" verbose="2" configfailurepolicy="continue" >

    <listeners>
        <!-- Required - avoid randomly mixed test method execution -->
        <listener class-name="org.jboss.cdi.tck.impl.testng.SingleTestClassMethodInterceptor"/>
        <!-- Optional - intended for debug purpose only -->
        <listener class-name="org.jboss.cdi.tck.impl.testng.ConfigurationLoggingListener"/>
        <listener class-name="org.jboss.cdi.tck.impl.testng.ProgressLoggingTestListener"/>
        <!-- Optional - it's recommended to disable the default JUnit XML reporter -->
        <!-- this is slow, activate locally if needed
        <listener class-name="org.testng.reporters.SuiteHTMLReporter"/>
        <listener class-name="org.testng.reporters.FailedReporter"/>
        <listener class-name="org.testng.reporters.XMLReporter"/>
        <listener class-name="org.testng.reporters.EmailableReporter"/>
        <listener class-name="org.testng.reporters.TestHTMLReporter"/>
        -->
    </listeners>

    <test name="JSR-346 TCK">
        <groups>
            <run>
                <exclude name="integration" />
                <exclude name="javaee-full" />
            </run>
        </groups>


        <packages>
            <package name="org.jboss.cdi.tck.tests.*">

                <!--X TODO OWB-1182 CDI 2.0 exlcuded for now - current focus on ee -->
                <exclude name="org.jboss.cdi.tck.tests.se.*" />

                <!-- Tests which do require a BuildCompatibleExtension and thus do not run with OWB-4.0 yet -->
                <exclude name="org.jboss.cdi.tck.tests.build.compatible.*"></exclude>
                <exclude name="org.jboss.cdi.tck.tests.full.extensions.lite.*"></exclude>
            </package>

            <package name="org.jboss.cdi.tck.interceptors.tests.*"/>

        </packages>


        <classes>

            <!-- Tests broken in the CDI-4.0 TCK: -->

            <!--
                Test wrongly assumes a specific ordering although both interceptors have priority 2000 and thus
                might get invoked in unspecified order.
                The Interceptors Spec explicitly says:
                "If more than one interceptor has the same priority, the relative order of those interceptors is undefined."
            -->
            <class name="org.jboss.cdi.tck.interceptors.tests.bindings.aroundConstruct.ConstructorInterceptionTest" >
                <methods>
                    <exclude name="testMultipleConstructorLevelBinding"/>
                    <exclude name="testTypeLevelAndConstructorLevelBinding"/>
                </methods>
            </class>
            <class name="org.jboss.cdi.tck.tests.interceptors.definition.InterceptorDefinitionTest" >
                <methods>
                    <exclude name="testResolveInterceptorsReturnsOrderedList"/>
                </methods>
            </class>
            <class name="org.jboss.cdi.tck.interceptors.tests.bindings.overriding.InterceptorBindingOverridingTest" >
                <methods>
                    <exclude name="testInterceptorBindingOverriden"/>
                </methods>
            </class>
            <class name="org.jboss.cdi.tck.interceptors.tests.contract.lifecycleCallback.bindings.LifecycleInterceptorDefinitionTest" >
                <methods>
                    <exclude name="testMultipleLifecycleInterceptors"/>
                </methods>
            </class>
            
            <!--
                The spec says nowhere that they must be invoked in exactly that order.
            -->
            <class name="org.jboss.cdi.tck.tests.full.extensions.beanDiscovery.event.ordering.LifecycleEventOrderingTest" >
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>

            <!--
                Illegal code as they do call createInjectionTarget(null); and not on the real bean.
            -->
            <class name="org.jboss.cdi.tck.tests.full.extensions.alternative.metadata.interceptor.AlternativeMetadataInterceptorInjectionTargetTest" >
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>

            <!--
                Test wrongly assumes that Annotated must implement equals().
            -->
            <class name="org.jboss.cdi.tck.tests.full.context.passivating.dependency.builtin.BuiltinBeanPassivationDependencyTest" >
                <methods>
                    <exclude name="testInjectionPoint"/>
                </methods>
            </class>

            <!--
                Test assumes wrong Exception. An AssertERROR gets thrown, but they catch an Exception...
            -->
            <class name="org.jboss.cdi.tck.interceptors.tests.contract.aroundConstruct.bindings.AroundConstructTest" >
                <methods>
                    <exclude name="testExceptions"/>
                </methods>
            </class>



            <!-- Tests broken in the CDI-2.0 TCK: -->

            <!-- https://issues.jboss.org/projects/CDITCK/issues/CDITCK-576 -->
<!--
            <class name="org.jboss.cdi.tck.tests.context.passivating.dependency.builtin.BuiltinBeanPassivationDependencyTest">
                <methods>
                    <exclude name="testInjectionPoint"/>
                </methods>
            </class>
-->

            <!-- https://issues.jboss.org/browse/CDITCK-577 -->
            <class name="org.jboss.cdi.tck.tests.definition.bean.BeanDefinitionTest">
                <methods>
                    <exclude name="testRawBeanTypes"/>
                </methods>
            </class>

            <!-- https://issues.jboss.org/browse/CDITCK-432 -->
            <class name="org.jboss.cdi.tck.tests.full.decorators.builtin.event.complex.ComplexEventDecoratorTest">
                <methods><exclude name=".*"/></methods>
            </class>

            <!-- https://issues.jboss.org/browse/CDITCK-578, https://issues.jboss.org/browse/CDITCK-579 -->
            <class name="org.jboss.cdi.tck.tests.full.definition.bean.custom.CustomBeanImplementationTest">
                <methods>
                    <exclude name="testCustomBeanIsPassivationCapable"/>
                    <exclude name="testCustomBeanIsPassivationCapableDependency"/>
                    <exclude name="testInjectionPointGetMemberIsUsedToDetermineTheClassThatDeclaresAnInjectionPoint"/>
                </methods>
            </class>

            <!-- this tests Weld specific internals -->
            <class name="org.jboss.cdi.tck.tests.definition.bean.types.illegal.BeanTypesWithIllegalTypeTest">
                <methods><exclude name=".*"/></methods>
            </class>

            <!-- https://issues.jboss.org/browse/CDITCK-580 -->
            <class name="org.jboss.cdi.tck.tests.full.inheritance.specialization.simple.SimpleBeanSpecializationTest">
                <methods><exclude name=".*"/></methods>
            </class>

            <!-- https://issues.jboss.org/browse/CDI-498 dots in EL names are not allowed by the EL spec. -->
            <class name="org.jboss.cdi.tck.tests.full.lookup.el.ResolutionByNameTest">
                <methods><exclude name="testBeanNameWithSeparatedListOfELIdentifiers"/></methods>
            </class>

            <!-- OWB provides a bit more for @New than CDI requires
               https://issues.jboss.org/browse/CDITCK-581
            -->
            <class name="org.jboss.cdi.tck.tests.lookup.dynamic.DynamicLookupTest">
                <methods>
                    <exclude name="testNewBeanNotEnabledWithouInjectionPoint"/>
                    <exclude name="testDuplicateBindingsThrowsException"/>
                </methods>
            </class>

            <!-- https://issues.jboss.org/browse/CDITCK-582 -->
            <class name="org.jboss.cdi.tck.tests.full.deployment.discovery.BeanDiscoveryTest">
                <methods><exclude name=".*"/></methods>
            </class>

            <!-- https://issues.jboss.org/browse/CDITCK-586 -->
            <class name="org.jboss.cdi.tck.tests.event.observer.async.basic.MixedObserversTest">
                <methods><exclude name="testAsyncObserversCalledInDifferentThread"/></methods>
            </class>

            <!-- https://issues.jboss.org/browse/CDITCK-588 equals on AnnotatedType -->
            <!-- https://issues.jboss.org/browse/CDITCK-589 because the ct predicate ends up randomly removing from the wrong ct -->
            <class name="org.jboss.cdi.tck.tests.full.extensions.configurators.annotatedTypeConfigurator.AnnotatedTypeConfiguratorTest">
                <methods><exclude name=".*"/></methods>
            </class>

            <!-- https://issues.jboss.org/browse/CDITCK-573 should be solved with tck 2.0.1.Final -->
            <class name="org.jboss.cdi.tck.tests.full.extensions.configurators.bean.BeanConfiguratorTest">
                <methods><exclude name=".*"/></methods>
            </class>

            <!-- https://issues.jboss.org/browse/CDITCK-591 -->
            <class name="org.jboss.cdi.tck.tests.full.extensions.alternative.metadata.AlternativeMetadataTest">
                <methods><exclude name=".*"/></methods>
            </class>

            <!-- https://issues.jboss.org/browse/CDI-581 , both tests...-->
            <class name="org.jboss.cdi.tck.tests.full.extensions.lifecycle.processBeanAttributes.specialization.VetoTest">
                <methods><exclude name=".*"/></methods>
            </class>
            <class name="org.jboss.cdi.tck.tests.full.extensions.lifecycle.processBeanAttributes.specialization.SpecializationTest">
                <methods><exclude name=".*"/></methods>
            </class>

            <!-- CDITCK-466 -->
            <class name="org.jboss.cdi.tck.tests.full.extensions.lifecycle.bbd.broken.passivatingScope.AddingPassivatingScopeTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>

            <!-- https://github.com/jakartaee/cdi-tck/issues/468 -->
            <class name="org.jboss.cdi.tck.tests.interceptors.definition.inheritance.InterceptorBindingInheritanceTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <!-- same as above #468. comparing a proxy with a contextual instance is a bad idea -->
            <class name="org.jboss.cdi.tck.interceptors.tests.contract.invocationContext.InvocationContextTest">
                <methods>
                    <exclude name="testGetTargetMethod"/>
                </methods>
            </class>


        </classes>


    </test>

</suite>
